
server:
  port: 19005
#Setting the logging levels for the service
spring:
  application:
    name: uid-example
  profiles:
    active: jpa-r2dbc
  sql:
    init:
      mode: never


#开启actuator管理api
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

logging:
  level:
    pro.chenggang: DEBUG
    org.springframework.r2dbc: DEBUG
    io.github.cooperlyt: DEBUG

#pagehelper:
#  helperDialect: mariadb
#  reasonable: true
#  supportMethodsArguments: true
#  params: count=countSql



# 以下为可选配置, 如未指定将采用默认值
uid:
  timeBits: 30             # 时间位, 默认:30
  workerBits: 16           # 机器位, 默认:16
  seqBits: 7               # 序列号, 默认:7
  epochStr: "2023-02-10"   # 初始时间, 默认:"2019-02-20"
  maxBackwardSeconds: 1   # 时钟回拨最长容忍时间（秒）, 默认:1
  enableFutureTime: false # 允许使用未来时间生成ID, 默认: false
  CachedUidGenerator:     # CachedUidGenerator相关参数
    boostPower: 3          # RingBuffer size扩容参数, 可提高UID生成的吞吐量, 默认:3
    paddingFactor: 50      # 指定何时向RingBuffer中填充UID, 取值为百分比(0, 100), 默认为50
    #scheduleInterval: 60    # 默认:不配置此项, 即不实用Schedule线程. 如需使用, 请指定Schedule线程时间间隔, 单位:秒

---

spring:
  config:
    activate:
      on-profile: jdbc

  datasource:
    url: "jdbc:mariadb://127.0.0.1:3306/corp?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&allowMultiQueries=true"
    username: "root"
    password: "5257mq"

---
spring:
  config:
    activate:
      on-profile: jpa-r2dbc

  r2dbc:
    url: "r2dbc:mariadb://127.0.0.1:3306/corp?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&allowMultiQueries=true"
    username: root
    password: 5257mq

---

spring:
  config:
    activate:
      on-profile: cloud
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    consul:
      host: localhost
      port: 8500
      ribbon:
        enabled: false
      discovery:
        serviceName: ${spring.application.name}
        # 启用服务发现
        enabled: true
        # 启用服务注册
        register: true
        # 服务停止时取消注册
        deregister: true
        # 表示注册时使用IP而不是hostname
        prefer-ip-address: true
        # 执行监控检查的频率
        health-check-interval: 30s
        # 设置健康检查失败多长时间后，取消注册
        health-check-critical-timeout: 30s
        # 健康检查的路径
        health-check-path: /actuator/info
        # 服务注册标识，格式为：应用名称+服务器IP+端口
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}



